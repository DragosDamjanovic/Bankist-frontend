{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"./../Constants/UserConstants\";\nimport { TRANSACTION_LIST_MY_RESET } from \"../Constants/TransactionConstants\";\nimport { URL } from \"../Url\";\n\n// LOGIN\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${URL}/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// USER DETAILS\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${URL}/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\n\n// LOGOUT\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"transactionList\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: TRANSACTION_LIST_MY_RESET\n  });\n};\n\n// REGISTER\nexport const register = (name, email, password, address, city) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${URL}/api/users`, {\n      name,\n      email,\n      password,\n      address,\n      city\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// UPDATE PROFILE\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`${URL}/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","TRANSACTION_LIST_MY_RESET","URL","login","email","password","dispatch","type","config","headers","Accept","Vary","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","logout","removeItem","register","name","address","city","updateUserProfile","user","put"],"sources":["E:/Desktop/Bankist1/bankist-app/src/Redux/Actions/UserAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"./../Constants/UserConstants\";\r\nimport { TRANSACTION_LIST_MY_RESET } from \"../Constants/TransactionConstants\";\r\nimport { URL } from \"../Url\";\r\n\r\n// LOGIN\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n        Vary: \"Origin\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${URL}/api/users/login`,\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// USER DETAILS\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n\r\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n        Vary: \"Origin\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${URL}/api/users/${id}`, config);\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// LOGOUT\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"transactionList\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: TRANSACTION_LIST_MY_RESET });\r\n};\r\n\r\n// REGISTER\r\nexport const register =\r\n  (name, email, password, address, city) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n\r\n          \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n          Vary: \"Origin\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${URL}/api/users`,\r\n        { name, email, password, address, city },\r\n        config\r\n      );\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// UPDATE PROFILE\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n\r\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n        Vary: \"Origin\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`${URL}/api/users/profile`, user, config);\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}