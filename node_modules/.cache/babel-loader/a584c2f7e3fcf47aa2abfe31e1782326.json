{"ast":null,"code":"import axios from \"axios\";\nimport { USER_UPDATE_TRANSFER_FAIL, USER_UPDATE_TRANSFER_SUCCESS, TRANSFER_ADD_FAIL, TRANSFER_ADD_REQUEST, TRANSFER_ADD_SUCCESS, USER_UPDATE_TRANSFER_REQUEST } from \"../Constants/TransferConstants\";\nimport { USER_LOGIN_SUCCESS } from \"../Constants/UserConstants\";\nimport { URL } from \"../Url\";\nimport { logout } from \"./UserAction\";\n\n// ADD TRANSFER\nexport const addTransfer = (name, address, city, accountNumber, amount, purposeOfPayment) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRANSFER_ADD_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${URL}/api/transactions`, {\n      name,\n      address,\n      city,\n      amount,\n      accountNumber,\n      purposeOfPayment\n    }, config);\n    dispatch({\n      type: TRANSFER_ADD_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"transactionItems\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: TRANSFER_ADD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// UPDATE TRANSFER\nexport const updateTransfer = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_TRANSFER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`${URL}/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_TRANSFER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_UPDATE_TRANSFER_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_UPDATE_TRANSFER_FAIL","USER_UPDATE_TRANSFER_SUCCESS","TRANSFER_ADD_FAIL","TRANSFER_ADD_REQUEST","TRANSFER_ADD_SUCCESS","USER_UPDATE_TRANSFER_REQUEST","USER_LOGIN_SUCCESS","URL","logout","addTransfer","name","address","city","accountNumber","amount","purposeOfPayment","dispatch","getState","type","userLogin","userInfo","config","headers","Accept","Authorization","token","Vary","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","updateTransfer","user","put"],"sources":["E:/Desktop/Bankist1/bankist-app/src/Redux/Actions/TransferAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_UPDATE_TRANSFER_FAIL,\r\n  USER_UPDATE_TRANSFER_SUCCESS,\r\n  TRANSFER_ADD_FAIL,\r\n  TRANSFER_ADD_REQUEST,\r\n  TRANSFER_ADD_SUCCESS,\r\n  USER_UPDATE_TRANSFER_REQUEST,\r\n} from \"../Constants/TransferConstants\";\r\nimport { USER_LOGIN_SUCCESS } from \"../Constants/UserConstants\";\r\nimport { URL } from \"../Url\";\r\nimport { logout } from \"./UserAction\";\r\n\r\n// ADD TRANSFER\r\nexport const addTransfer =\r\n  (name, address, city, accountNumber, amount, purposeOfPayment) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: TRANSFER_ADD_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n\r\n          \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n          Vary: \"Origin\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${URL}/api/transactions`,\r\n        { name, address, city, amount, accountNumber, purposeOfPayment },\r\n        config\r\n      );\r\n      dispatch({ type: TRANSFER_ADD_SUCCESS, payload: data });\r\n      localStorage.setItem(\"transactionItems\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: TRANSFER_ADD_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// UPDATE TRANSFER\r\nexport const updateTransfer = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_TRANSFER_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n\r\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n        Vary: \"Origin\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`${URL}/api/users/profile`, user, config);\r\n    dispatch({ type: USER_UPDATE_TRANSFER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_TRANSFER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}