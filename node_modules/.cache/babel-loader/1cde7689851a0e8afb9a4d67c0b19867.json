{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./Reducers/UserReducers\";\nimport { transactionCreateReducer, transactionDetailsReducer, transactionListMyReducer } from \"./Reducers/TransactionReducers\";\nimport { transferReducer, userUpdateTransferReducer } from \"./Reducers/TransferReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  transactionCreate: transactionCreateReducer,\n  transactionDetails: transactionDetailsReducer,\n  transactionListMy: transactionListMyReducer,\n  userUpdateTransfer: userUpdateTransferReducer,\n  transfer: transferReducer\n});\n\n// LOGIN\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\n\n// TRANSFER\nconst transferFromLocalStorage = localStorage.getItem(\"transactionList\") ? JSON.parse(localStorage.getItem(\"transactionList\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromLocalStorage,\n    transferInfo: transferFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["applyMiddleware","combineReducers","createStore","thunk","composeWithDevTools","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","transactionCreateReducer","transactionDetailsReducer","transactionListMyReducer","transferReducer","userUpdateTransferReducer","reducer","userLogin","userRegister","userDetails","userUpdateProfile","transactionCreate","transactionDetails","transactionListMy","userUpdateTransfer","transfer","userInfoFromLocalStorage","localStorage","getItem","JSON","parse","transferFromLocalStorage","initialState","userInfo","transferInfo","middleware","store"],"sources":["E:/Desktop/Bankist1/bankist-app/src/Redux/store.js"],"sourcesContent":["import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n} from \"./Reducers/UserReducers\";\r\nimport {\r\n  transactionCreateReducer,\r\n  transactionDetailsReducer,\r\n  transactionListMyReducer,\r\n} from \"./Reducers/TransactionReducers\";\r\nimport {\r\n  transferReducer,\r\n  userUpdateTransferReducer,\r\n} from \"./Reducers/TransferReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  transactionCreate: transactionCreateReducer,\r\n  transactionDetails: transactionDetailsReducer,\r\n  transactionListMy: transactionListMyReducer,\r\n  userUpdateTransfer: userUpdateTransferReducer,\r\n  transfer: transferReducer,\r\n});\r\n\r\n// LOGIN\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n// TRANSFER\r\nconst transferFromLocalStorage = localStorage.getItem(\"transactionList\")\r\n  ? JSON.parse(localStorage.getItem(\"transactionList\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: {\r\n    userInfo: userInfoFromLocalStorage,\r\n    transferInfo: transferFromLocalStorage,\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,kBAAkB,EAClBC,gBAAgB,EAChBC,mBAAmB,EACnBC,wBAAwB,QACnB,yBAAyB;AAChC,SACEC,wBAAwB,EACxBC,yBAAyB,EACzBC,wBAAwB,QACnB,gCAAgC;AACvC,SACEC,eAAe,EACfC,yBAAyB,QACpB,6BAA6B;AAEpC,MAAMC,OAAO,GAAGb,eAAe,CAAC;EAC9Bc,SAAS,EAAET,gBAAgB;EAC3BU,YAAY,EAAET,mBAAmB;EACjCU,WAAW,EAAEZ,kBAAkB;EAC/Ba,iBAAiB,EAAEV,wBAAwB;EAC3CW,iBAAiB,EAAEV,wBAAwB;EAC3CW,kBAAkB,EAAEV,yBAAyB;EAC7CW,iBAAiB,EAAEV,wBAAwB;EAC3CW,kBAAkB,EAAET,yBAAyB;EAC7CU,QAAQ,EAAEX;AACZ,CAAC,CAAC;;AAEF;AACA,MAAMY,wBAAwB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAC7DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;;AAER;AACA,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACpEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,IAAI;AAER,MAAMI,YAAY,GAAG;EACnBf,SAAS,EAAE;IACTgB,QAAQ,EAAEP,wBAAwB;IAClCQ,YAAY,EAAEH;EAChB;AACF,CAAC;AAED,MAAMI,UAAU,GAAG,CAAC9B,KAAK,CAAC;AAE1B,MAAM+B,KAAK,GAAGhC,WAAW,CACvBY,OAAO,EACPgB,YAAY,EACZ1B,mBAAmB,CAACJ,eAAe,CAAC,GAAGiC,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}