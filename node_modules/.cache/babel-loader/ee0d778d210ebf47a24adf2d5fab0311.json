{"ast":null,"code":"import { TRANSACTION_CREATE_FAIL, TRANSACTION_CREATE_REQUEST, TRANSACTION_CREATE_SUCCESS, TRANSACTION_DETAILS_FAIL, TRANSACTION_DETAILS_REQUEST, TRANSACTION_DETAILS_SUCCESS, TRANSACTION_LIST_MY_FAIL, TRANSACTION_LIST_MY_REQUEST, TRANSACTION_LIST_MY_SUCCESS, TRANSACTION_PAY_FAIL, TRANSACTION_PAY_REQUEST, TRANSACTION_PAY_SUCCESS } from \"../Constants/TransactionConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./UserAction\";\nimport { URL } from \"../Url\"; // CREATE TRANSACTION\n\nexport const createTransaction = transaction => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRANSACTION_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${URL}/api/transactions`, transaction, config);\n    dispatch({\n      type: TRANSACTION_CREATE_SUCCESS,\n      payload: data\n    }); //dispatch({ type: CART_CLEAR_ITEMS, payload: data });\n    //localStorage.removeItem(\"transactionItems\");\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: TRANSACTION_CREATE_FAIL,\n      payload: message\n    });\n  }\n}; // SINGLE TRANSACTION DETAILS\n\nexport const getTransactionDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRANSACTION_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${URL}/api/transactions/${id}`, config);\n    dispatch({\n      type: TRANSACTION_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {//dispatch(logout());\n    }\n\n    dispatch({\n      type: TRANSACTION_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; // TRANSACTION PAY\n\nexport const payTransaction = (transactionId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRANSACTION_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`${URL}/api/transactions/${transactionId}/pay`, paymentResult, config);\n    dispatch({\n      type: TRANSACTION_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: TRANSACTION_PAY_FAIL,\n      payload: message\n    });\n  }\n}; // USER TRANSACTION\n\nexport const listMyTransactions = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRANSACTION_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${URL}/api/transactions`, config);\n    dispatch({\n      type: TRANSACTION_LIST_MY_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"transactionList\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: TRANSACTION_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["TRANSACTION_CREATE_FAIL","TRANSACTION_CREATE_REQUEST","TRANSACTION_CREATE_SUCCESS","TRANSACTION_DETAILS_FAIL","TRANSACTION_DETAILS_REQUEST","TRANSACTION_DETAILS_SUCCESS","TRANSACTION_LIST_MY_FAIL","TRANSACTION_LIST_MY_REQUEST","TRANSACTION_LIST_MY_SUCCESS","TRANSACTION_PAY_FAIL","TRANSACTION_PAY_REQUEST","TRANSACTION_PAY_SUCCESS","axios","logout","URL","createTransaction","transaction","dispatch","getState","type","userLogin","userInfo","config","headers","Accept","Vary","Authorization","token","data","post","payload","error","message","response","getTransactionDetails","id","get","payTransaction","transactionId","paymentResult","put","listMyTransactions","localStorage","setItem","JSON","stringify"],"sources":["E:/Desktop/Bankist1/bankist-app/src/Redux/Actions/TransactionAction.js"],"sourcesContent":["import {\r\n  TRANSACTION_CREATE_FAIL,\r\n  TRANSACTION_CREATE_REQUEST,\r\n  TRANSACTION_CREATE_SUCCESS,\r\n  TRANSACTION_DETAILS_FAIL,\r\n  TRANSACTION_DETAILS_REQUEST,\r\n  TRANSACTION_DETAILS_SUCCESS,\r\n  TRANSACTION_LIST_MY_FAIL,\r\n  TRANSACTION_LIST_MY_REQUEST,\r\n  TRANSACTION_LIST_MY_SUCCESS,\r\n  TRANSACTION_PAY_FAIL,\r\n  TRANSACTION_PAY_REQUEST,\r\n  TRANSACTION_PAY_SUCCESS,\r\n} from \"../Constants/TransactionConstants\";\r\nimport axios from \"axios\";\r\nimport { logout } from \"./UserAction\";\r\nimport { URL } from \"../Url\";\r\n\r\n// CREATE TRANSACTION\r\nexport const createTransaction =\r\n  (transaction) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: TRANSACTION_CREATE_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n\r\n          \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n          Vary: \"Origin\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${URL}/api/transactions`,\r\n        transaction,\r\n        config\r\n      );\r\n      dispatch({ type: TRANSACTION_CREATE_SUCCESS, payload: data });\r\n      //dispatch({ type: CART_CLEAR_ITEMS, payload: data });\r\n\r\n      //localStorage.removeItem(\"transactionItems\");\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: TRANSACTION_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n// SINGLE TRANSACTION DETAILS\r\nexport const getTransactionDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TRANSACTION_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n\r\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n        Vary: \"Origin\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${URL}/api/transactions/${id}`, config);\r\n    dispatch({ type: TRANSACTION_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      //dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: TRANSACTION_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// TRANSACTION PAY\r\nexport const payTransaction =\r\n  (transactionId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: TRANSACTION_PAY_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n\r\n          \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n          Vary: \"Origin\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `${URL}/api/transactions/${transactionId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n      dispatch({ type: TRANSACTION_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: TRANSACTION_PAY_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n// USER TRANSACTION\r\nexport const listMyTransactions = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TRANSACTION_LIST_MY_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n\r\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n        Vary: \"Origin\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${URL}/api/transactions`, config);\r\n    dispatch({ type: TRANSACTION_LIST_MY_SUCCESS, payload: data });\r\n    localStorage.setItem(\"transactionList\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: TRANSACTION_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}