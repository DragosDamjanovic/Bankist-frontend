{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"./../Constants/UserConstants\";\nimport { TRANSACTION_LIST_MY_RESET } from \"../Constants/TransactionConstants\"; // LOGIN\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \"Bearer \",\n        Origin: \"http://localhost:3000\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // LOGOUT\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: TRANSACTION_LIST_MY_RESET\n  });\n}; // REGISTER\n\nexport const register = (name, email, password, address, city) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users`, {\n      name,\n      email,\n      password,\n      address,\n      city\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // USER DETAILS\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; // UPDATE PROFILE\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","TRANSACTION_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","Accept","Authorization","Origin","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","address","city","getUserDetails","id","getState","userLogin","userInfo","token","get","updateUserProfile","user","put"],"sources":["E:/Desktop/Bankist1/bankist-app/src/Redux/Actions/UserAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"./../Constants/UserConstants\";\r\nimport { TRANSACTION_LIST_MY_RESET } from \"../Constants/TransactionConstants\";\r\n\r\n// LOGIN\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \",\r\n        Origin: \"http://localhost:3000\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/users/login`,\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// LOGOUT\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: TRANSACTION_LIST_MY_RESET });\r\n};\r\n\r\n// REGISTER\r\nexport const register =\r\n  (name, email, password, address, city) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/users`,\r\n        { name, email, password, address, city },\r\n        config\r\n      );\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// USER DETAILS\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// UPDATE PROFILE\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,oBAJF,EAKEC,eALF,EAMEC,kBANF,EAOEC,kBAPF,EAQEC,WARF,EASEC,kBATF,EAUEC,qBAVF,EAWEC,qBAXF,EAYEC,wBAZF,EAaEC,2BAbF,EAcEC,2BAdF,QAeO,8BAfP;AAgBA,SAASC,yBAAT,QAA0C,mCAA1C,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EAC5D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEd;IAAR,CAAD,CAAR;IACA,MAAMe,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEPC,MAAM,EAAE,kBAFD;QAGPC,aAAa,EAAE,SAHR;QAIPC,MAAM,EAAE;MAJD;IADI,CAAf;IAQA,MAAM;MAAEC;IAAF,IAAW,MAAM1B,KAAK,CAAC2B,IAAN,CACpB,kBADoB,EAErB;MAAEV,KAAF;MAASC;IAAT,CAFqB,EAGrBG,MAHqB,CAAvB;IAKAF,QAAQ,CAAC;MAAEC,IAAI,EAAEb,kBAAR;MAA4BqB,OAAO,EAAEF;IAArC,CAAD,CAAR;IAEAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;EACD,CAlBD,CAkBE,OAAOO,KAAP,EAAc;IACdd,QAAQ,CAAC;MACPC,IAAI,EAAEf,eADC;MAEPuB,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CA5BM,C,CA8BP;;AACA,OAAO,MAAMC,MAAM,GAAG,MAAOjB,QAAD,IAAc;EACxCU,YAAY,CAACQ,UAAb,CAAwB,UAAxB;EACAlB,QAAQ,CAAC;IAAEC,IAAI,EAAEZ;EAAR,CAAD,CAAR;EACAW,QAAQ,CAAC;IAAEC,IAAI,EAAEjB;EAAR,CAAD,CAAR;EACAgB,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAR,CAAD,CAAR;AACD,CALM,C,CAOP;;AACA,OAAO,MAAMuB,QAAQ,GACnB,CAACC,IAAD,EAAOtB,KAAP,EAAcC,QAAd,EAAwBsB,OAAxB,EAAiCC,IAAjC,KAA0C,MAAOtB,QAAP,IAAoB;EAC5D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAMW,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;IAKA,MAAM;MAAEI;IAAF,IAAW,MAAM1B,KAAK,CAAC2B,IAAN,CACpB,YADoB,EAErB;MAAEY,IAAF;MAAQtB,KAAR;MAAeC,QAAf;MAAyBsB,OAAzB;MAAkCC;IAAlC,CAFqB,EAGrBpB,MAHqB,CAAvB;IAKAF,QAAQ,CAAC;MAAEC,IAAI,EAAET,qBAAR;MAA+BiB,OAAO,EAAEF;IAAxC,CAAD,CAAR;IACAP,QAAQ,CAAC;MAAEC,IAAI,EAAEb,kBAAR;MAA4BqB,OAAO,EAAEF;IAArC,CAAD,CAAR;IAEAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;EACD,CAhBD,CAgBE,OAAOO,KAAP,EAAc;IACdd,QAAQ,CAAC;MACPC,IAAI,EAAEX,kBADC;MAEPmB,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CA3BI,C,CA6BP;;AACA,OAAO,MAAMO,cAAc,GAAIC,EAAD,IAAQ,OAAOxB,QAAP,EAAiByB,QAAjB,KAA8B;EAClE,IAAI;IACFzB,QAAQ,CAAC;MAAEC,IAAI,EAAElB;IAAR,CAAD,CAAR;IAEA,MAAM;MACJ2C,SAAS,EAAE;QAAEC;MAAF;IADP,IAEFF,QAAQ,EAFZ;IAIA,MAAMvB,MAAM,GAAG;MACbC,OAAO,EAAE;QACPE,aAAa,EAAG,UAASsB,QAAQ,CAACC,KAAM;MADjC;IADI,CAAf;IAMA,MAAM;MAAErB;IAAF,IAAW,MAAM1B,KAAK,CAACgD,GAAN,CAAW,cAAaL,EAAG,EAA3B,EAA8BtB,MAA9B,CAAvB;IACAF,QAAQ,CAAC;MAAEC,IAAI,EAAEhB,oBAAR;MAA8BwB,OAAO,EAAEF;IAAvC,CAAD,CAAR;EACD,CAfD,CAeE,OAAOO,KAAP,EAAc;IACd,MAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;;IAIA,IAAIA,OAAO,KAAK,8BAAhB,EAAgD;MAC9ChB,QAAQ,CAACiB,MAAM,EAAP,CAAR;IACD;;IACDjB,QAAQ,CAAC;MACPC,IAAI,EAAEnB,iBADC;MAEP2B,OAAO,EAAEO;IAFF,CAAD,CAAR;EAID;AACF,CA7BM,C,CA+BP;;AACA,OAAO,MAAMc,iBAAiB,GAAIC,IAAD,IAAU,OAAO/B,QAAP,EAAiByB,QAAjB,KAA8B;EACvE,IAAI;IACFzB,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAR,CAAD,CAAR;IAEA,MAAM;MACJgC,SAAS,EAAE;QAAEC;MAAF;IADP,IAEFF,QAAQ,EAFZ;IAIA,MAAMvB,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEPE,aAAa,EAAG,UAASsB,QAAQ,CAACC,KAAM;MAFjC;IADI,CAAf;IAOA,MAAM;MAAErB;IAAF,IAAW,MAAM1B,KAAK,CAACmD,GAAN,CAAW,oBAAX,EAAgCD,IAAhC,EAAsC7B,MAAtC,CAAvB;IACAF,QAAQ,CAAC;MAAEC,IAAI,EAAEN,2BAAR;MAAqCc,OAAO,EAAEF;IAA9C,CAAD,CAAR;IACAP,QAAQ,CAAC;MAAEC,IAAI,EAAEb,kBAAR;MAA4BqB,OAAO,EAAEF;IAArC,CAAD,CAAR;IAEAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;EACD,CAnBD,CAmBE,OAAOO,KAAP,EAAc;IACd,MAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;;IAIA,IAAIA,OAAO,KAAK,8BAAhB,EAAgD;MAC9ChB,QAAQ,CAACiB,MAAM,EAAP,CAAR;IACD;;IACDjB,QAAQ,CAAC;MACPC,IAAI,EAAER,wBADC;MAEPgB,OAAO,EAAEO;IAFF,CAAD,CAAR;EAID;AACF,CAjCM"},"metadata":{},"sourceType":"module"}