{"ast":null,"code":"import axios from \"axios\";\nimport { TRANSACTION_LIST_MY_RESET } from \"../Constants/OrderConstants\";\nimport { USER_LOGIN_REQUEST } from \"./../Constants/UserConstants\"; // LOGIN\n\nexport const login = (email, pin) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login`, {\n      email,\n      pin\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // LOGOUT\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: TRANSACTION_LIST_MY_RESET\n  });\n}; // REGISTER\n\nexport const register = (name, email, pin, address, city) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users`, {\n      name,\n      email,\n      pin,\n      address,\n      city\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // USER DETAILS\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; // UPDATE PROFILE\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","TRANSACTION_LIST_MY_RESET","USER_LOGIN_REQUEST","login","email","pin","dispatch","type","config","headers","data","post","USER_LOGIN_SUCCESS","payload","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAIL","response","message","logout","removeItem","USER_LOGOUT","USER_DETAILS_RESET","register","name","address","city","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","getUserDetails","id","getState","USER_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","get","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","updateUserProfile","user","USER_UPDATE_PROFILE_REQUEST","put","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL"],"sources":["E:/Desktop/Bankist/bankist-app/src/Redux/Actions/UserAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { TRANSACTION_LIST_MY_RESET } from \"../Constants/OrderConstants\";\r\nimport { USER_LOGIN_REQUEST } from \"./../Constants/UserConstants\";\r\n\r\n// LOGIN\r\nexport const login = (email, pin) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/users/login`,\r\n      { email, pin },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// LOGOUT\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: TRANSACTION_LIST_MY_RESET });\r\n};\r\n\r\n// REGISTER\r\nexport const register =\r\n  (name, email, pin, address, city) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/users`,\r\n        { name, email, pin, address, city },\r\n        config\r\n      );\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// USER DETAILS\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// UPDATE PROFILE\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}