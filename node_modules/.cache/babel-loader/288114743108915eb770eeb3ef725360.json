{"ast":null,"code":"import axios from \"axios\";\nimport { USER_UPDATE_TRANSFER_FAIL, USER_UPDATE_TRANSFER_SUCCESS, TRANSFER_ADD_FAIL, TRANSFER_ADD_REQUEST, TRANSFER_ADD_SUCCESS, USER_UPDATE_TRANSFER_REQUEST } from \"../Constants/TransferConstants\";\nimport { USER_LOGIN_SUCCESS } from \"../Constants/UserConstants\";\nimport { logout } from \"./UserAction\"; // ADD TRANSFER\n\nexport const addTransfer = (name, address, city, accountNumber, amount, purposeOfPayment) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRANSFER_ADD_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/transactions\", {\n      name,\n      address,\n      city,\n      amount,\n      accountNumber,\n      purposeOfPayment\n    }, config);\n    dispatch({\n      type: TRANSFER_ADD_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"transactionItems\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: TRANSFER_ADD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n/*\r\n// REMOVE TRANSFER\r\nexport const removefromcart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: TRANSFER_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\r\n    \"transactionItems\",\r\n    JSON.stringify(getState().transactionItems)\r\n  );\r\n};\r\n*/\n// UPDATE TRANSFER\n\nexport const updateTransfer = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_TRANSFER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\n        Vary: \"Origin\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_TRANSFER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_TRANSFER_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_UPDATE_TRANSFER_FAIL","USER_UPDATE_TRANSFER_SUCCESS","TRANSFER_ADD_FAIL","TRANSFER_ADD_REQUEST","TRANSFER_ADD_SUCCESS","USER_UPDATE_TRANSFER_REQUEST","USER_LOGIN_SUCCESS","logout","addTransfer","name","address","city","accountNumber","amount","purposeOfPayment","dispatch","getState","type","userLogin","userInfo","config","headers","Accept","Authorization","token","Vary","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","updateTransfer","user","put"],"sources":["E:/Desktop/Bankist1/bankist-app/src/Redux/Actions/TransferAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_UPDATE_TRANSFER_FAIL,\r\n  USER_UPDATE_TRANSFER_SUCCESS,\r\n  TRANSFER_ADD_FAIL,\r\n  TRANSFER_ADD_REQUEST,\r\n  TRANSFER_ADD_SUCCESS,\r\n  USER_UPDATE_TRANSFER_REQUEST,\r\n} from \"../Constants/TransferConstants\";\r\nimport { USER_LOGIN_SUCCESS } from \"../Constants/UserConstants\";\r\nimport { logout } from \"./UserAction\";\r\n\r\n// ADD TRANSFER\r\nexport const addTransfer =\r\n  (name, address, city, accountNumber, amount, purposeOfPayment) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: TRANSFER_ADD_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n\r\n          \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n          Vary: \"Origin\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/transactions\",\r\n        { name, address, city, amount, accountNumber, purposeOfPayment },\r\n        config\r\n      );\r\n      dispatch({ type: TRANSFER_ADD_SUCCESS, payload: data });\r\n      localStorage.setItem(\"transactionItems\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: TRANSFER_ADD_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n/*\r\n// REMOVE TRANSFER\r\nexport const removefromcart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: TRANSFER_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\r\n    \"transactionItems\",\r\n    JSON.stringify(getState().transactionItems)\r\n  );\r\n};\r\n*/\r\n\r\n// UPDATE TRANSFER\r\nexport const updateTransfer = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_TRANSFER_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n\r\n        \"Access-Control-Allow-Origin\": \"https://developer.mozilla.org\",\r\n        Vary: \"Origin\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n    dispatch({ type: USER_UPDATE_TRANSFER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_TRANSFER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}